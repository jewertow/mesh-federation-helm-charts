{{- if .Values.global.egressGateway.enabled }}
{{- $remotes := .Values.global.remote | default list }}
{{- if gt (len $remotes) 0 }}
{{- range $meshIdx, $mesh := $remotes }}
{{- if .Values.global.enableGatewayAPI }}
apiVersion: v1
kind: Service
metadata:
  name: ingress-{{ $mesh.mesh }}
  namespace: {{ $.Release.Namespace }}
spec:
  clusterIP: None
  ports:
  - port: {{ $mesh.port }}
    name: auto-passthrough-tls
    protocol: TCP
  selector: {}
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: ingress-{{ $mesh.mesh }}
  namespace: {{ $.Release.Namespace }}
  labels:
    kubernetes.io/service-name: ingress-{{ $mesh.mesh }}
addressType: IPv4
ports:
- name: auto-passthrough-tls
  port: {{ $mesh.port }}
  protocol: TCP
endpoints:
{{- range $addr := $mesh.addresses }}
- addresses:
  - {{ $addr }}
  zone: {{ $mesh.locality | default "unknown" }}
{{- end }}
---
{{- else }}
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: ingress-{{ $mesh.mesh }}
  namespace: {{ $.Release.Namespace }}
spec:
  exportTo:
  - "."
  hosts:
  - ingress.{{ $mesh.mesh }}.global
  ports:
  - number: {{ $mesh.port }}
    name: auto-passthrough-tls
    protocol: TLS
  {{/* TODO: resolution should depend on the address format - DNS for hostnames and STATIC for IP addresses */}}
  resolution: DNS
  location: MESH_INTERNAL
  endpoints:
  {{- range $addr := $mesh.addresses }}
  - address: {{ $addr }}
    ports:
      auto-passthrough-tls: {{ $mesh.port }}
    network: {{ $mesh.network }}
    {{- if $mesh.locality }}
    locality: {{ $mesh.locality }}
    {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
