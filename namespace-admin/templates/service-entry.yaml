{{/* Build maps of all hostnames for processing */}}
{{- $allHostnames := dict }}
{{- $exportMap := dict }}
{{- $importMap := dict }}

{{/* Build export map */}}
{{- range $export := .Values.export }}
{{- $_ := set $exportMap $export.hostname $export }}
{{- $_ := set $allHostnames $export.hostname true }}
{{- end }}

{{/* Build import map */}}
{{- range $import := .Values.import }}
{{- $_ := set $importMap $import.hostname $import }}
{{- $_ := set $allHostnames $import.hostname true }}
{{- end }}

{{/* Create ServiceEntry for each unique hostname */}}
{{- range $hostname, $_ := $allHostnames }}
{{- $export := index $exportMap $hostname }}
{{- $import := index $importMap $hostname }}
{{- $ports := dict }}
{{- if $export }}
{{- $ports = $export.ports | default $.Values.global.defaultServicePorts }}
{{- else }}
{{- $ports = $import.ports | default $.Values.global.defaultServicePorts }}
{{- end }}
apiVersion: networking.istio.io/v1
kind: ServiceEntry
metadata:
  name: {{ printf "%s" $hostname | replace "." "-" | trunc 253 }}
  namespace: {{ $.Release.Namespace }}
spec:
  hosts:
  - {{ $hostname }}
  location: MESH_INTERNAL
  ports:
  {{- range $port := $ports }}
  - number: {{ $port.number }}
    name: {{ $port.name }}
    protocol: {{ $port.protocol }}
    {{- if $port.targetPort }}
    targetPort: {{ $port.targetPort }}
    {{- end }}
  {{- end }}
  resolution: STATIC
  workloadSelector:
    labels:
      {{- if $export }}
      {{- with $export.labelSelector }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- else }}
      hostname: {{ $hostname | replace "." "-" }}
      {{- end }}
---
{{- end }}
